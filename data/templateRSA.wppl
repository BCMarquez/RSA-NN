// possible objects of reference
var objectPrior = function() {
  uniformDraw([
    <obj1>
    <obj2>
    <obj3>
  ])
}

// possible one-word utterances
var utterances = <utters>

// meaning function to interpret the utterances
var meaning = function(utterance, obj){
  <col_meaning>? utterance === obj.color :
  <sha_meaning>? utterance === obj.shape :
  true
}

// literal listener
var literalListener = function(utterance){
  Infer({model: function(){
    var obj = objectPrior();
    condition(meaning(utterance, obj))
    return obj
  }})
}

// set speaker optimality
var alpha = 1

// pragmatic speaker
var speaker = function(obj){
  Infer({model: function(){
    var utterance = uniformDraw(utterances)
    factor(alpha * literalListener(utterance).score(obj))
    return utterance
  }})
}

// pragmatic listener
var pragmaticListener = function(utterance){
  Infer({model: function(){
    var obj = objectPrior()
    observe(speaker(obj),utterance)
    return obj
  }})
}

<utter_dist_vars>

// write labels
<label_line>;


